@model IEnumerable<Asistencia.Models.Evento>

@{
    ViewBag.Title = "Eventos";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var claimsIdentity = User.Identity as System.Security.Claims.ClaimsIdentity;
    var userId = int.Parse(claimsIdentity.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value.ToString());
}

@Html.AntiForgeryToken()
<div class="table-responsive">
    <table class="table table-striped table-bordered" id="tblEventos">
        <thead class="thead-dark">
            <tr>
                <th>
                    @Html.Label("Tema")
                </th>
                <th>
                    @Html.Label("Facilitador")
                </th>
                <th>
                    @Html.Label("Lugar")
                </th>
                <th>
                    @Html.Label("Fecha")
                </th>
                <th>
                    @Html.Label("Duración")
                </th>
                <th>
                    @Html.Label("Activa")
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model)
            {
                var claim = claimsIdentity.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier);
                bool isCreator = item.intCreador == int.Parse(claim.Value.ToString());
                //if (isCreator || User.IsInRole("Administrador") == true)
                //{

                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.strTema)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.strFacilitador)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.strLugar)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.dtmFecha)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.dtmDuracion)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.bitEstado)
                        </td>
                        <td>
                            <div class="dropdown">
                                <button class="btn btn-primary dropdown-toggle" type="button" id="ddOpciones" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                    Opciones
                                    <span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-right" aria-labelledby="ddOpciones">
                                    <li>@Html.ActionLink("Ver código QR", "Link", new { txtQRCode = @Url.Action("Create", "Asistentes", new { id = item.intIdEvento }, this.Request.Url.Scheme) })</li>
                                    <li>@Html.ActionLink(" Diligenciar Asistencia", "Create", "Asistentes", new { id = item.intIdEvento }, new { target = "_blank" })</li>
                                    @if (Request.IsAuthenticated && User.IsInRole("Administrador") || userId==item.intCreador)
                                    {
                                        <li>@Html.ActionLink("Editar Evento", "Edit", new { id = item.intIdEvento })</li>
                                        <li> @Html.ActionLink("Editar asistentes", "Index", "Asistentes", new { id = item.intIdEvento }, null)</li>
                                        <li><a href="http://190.0.24.13/ReportServer/Pages/ReportViewer.aspx?%2fMontessori%2fAsistencia%2fRegistroAsistencia&rs:Command=Render&intIdEvento= + @item.intIdEvento" target="_blank">Ver reporte</a></li>

                                    }
                                    @if (Request.IsAuthenticated && User.IsInRole("Administrador"))
                                    {
                                        <li><a onclick="deletemessage(@item.intIdEvento)">Eliminar</a></li>
                                    }
                                </ul>
                            </div>



                        </td>
                    </tr>

               // }
            }
        </tbody>
    </table>
</div>
@if (Request.IsAuthenticated && User.IsInRole("Creador")|| User.IsInRole("Administrador"))
{
    <p>
        <input type="button" value="Crear evento" onclick="location.href='@Url.Action("Create", "Eventos")'" class="btn btn-primary" />
    </p>
}
    @if (TempData["Message"] != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                @*alert("@ViewBag.Message");*@
                                Swal.fire(
                            'Error!',
                            '@TempData["Message"]',
                            'error'
                            );
            };
        </script>

    }

    <script>


    function deletemessage(ide) {
        Swal.fire({
            title: 'Desea eliminar este registro?',
            text: "Esta acción es definitva y no se puede revertir",
            icon: 'warning',
            showCancelButton: true,
            cancelButtonText:'Cancelar',
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Si'
        }).then((result) => {
            if (result.value) {
                var id = ide;
                var token = $('input[name="__RequestVerificationToken"]').val();
		                $.ajax({
			                url: '@Url.Action("Delete","Eventos")' + '/'+ id,
			                type: "POST",
			                traditional: true,
                            data: {
                                __RequestVerificationToken: token,
                            },
			                success: function () {
                                //Swal.fire(
                                //    'Completado!',
                                //    'El registro fue eliminado',
                                //    'success'
                                //);
                                Swal.fire({
                                  icon: 'success',
                                  title: 'Completado!',
                                  text: 'Se eliminó el registro correctamente',
                                    onClose: () => {
                                        location.reload();
                                    }

                                })
			                },
                            error: function () {
                                            Swal.fire(
                                                'Opps!',
                                                'se presento un error al eliminar el registro',
                                                'error'
                                                 )
                            }
		                });

            }
        });
    }
    </script>
