
@using Asistencia.ViewModels
@model UsuarioViewModel
@{
    ViewBag.Title = "Crear usuario";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Usuario.Nombres, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Usuario.Nombres, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Usuario.Nombres, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Usuario.Apellidos, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Usuario.Apellidos, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Usuario.Apellidos, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Usuario.Email, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Usuario.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Usuario.Email, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Usuario.Clave, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Usuario.Clave, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Usuario.Clave, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Roles", htmlAttributes: new { @class = "control-label" })

            <br />
            @for (var i = 0; i < Model.Roles.Count; i++)
            {
                @Html.HiddenFor(m => m.Roles[i].Value)
                @Html.CheckBoxFor(m => m.Roles[i].Selected)
                @Html.LabelFor(m => m.Roles[i].Selected, Model.Roles[i].Text)
                @Html.Raw("&nbsp;")
            }
        </div>


        <div class="form-group">
            <input type="submit" value="Crear" class="btn btn-primary" />
            <input type="button" value="Volver" onclick="location.href='@Url.Action("Index","Usuarios")'" class="btn btn-default" />
        </div>
    </div>
}
@if (TempData["Message"] != null)
{
    <script type="text/javascript">
            window.onload = function () {
                                Swal.fire(
                            'Completado!',
                            '@TempData["Message"]',
                            'success'
                            );
            };
    </script>
}
